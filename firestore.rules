rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Permitir operaciones de inicialización del administrador
    match /administradores/{adminId} {
      allow read, write: if true; // Temporalmente permitimos acceso total para la inicialización
    }

    // Reglas para la colección de estudiantes
    match /estudiantes/{studentId} {
      allow read: if request.auth != null && (
        // El administrador puede leer todos los documentos
        exists(/databases/$(database)/documents/administradores/{adminDoc}) &&
        get(/databases/$(database)/documents/administradores/{adminDoc}).data.email == request.auth.token.email ||
        // El estudiante puede leer su propio documento
        resource.data.email == request.auth.token.email
      );
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/administradores/{adminDoc}) &&
        get(/databases/$(database)/documents/administradores/{adminDoc}).data.email == request.auth.token.email;
    }

    // Reglas para materias
    match /materias/{materiaId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/administradores/{adminDoc}) &&
        get(/databases/$(database)/documents/administradores/{adminDoc}).data.email == request.auth.token.email;
    }

    // Reglas para calificaciones
    match /calificaciones/{calificacionId} {
      allow read: if request.auth != null && (
        // El administrador puede leer todas las calificaciones
        exists(/databases/$(database)/documents/administradores/{adminDoc}) &&
        get(/databases/$(database)/documents/administradores/{adminDoc}).data.email == request.auth.token.email ||
        // El estudiante puede leer sus propias calificaciones
        resource.data.estudiante_email == request.auth.token.email
      );
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/administradores/{adminDoc}) &&
        get(/databases/$(database)/documents/administradores/{adminDoc}).data.email == request.auth.token.email;
    }
  }
}
